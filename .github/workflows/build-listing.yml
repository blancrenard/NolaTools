name: Build Repo Listing

env:
  listPublicDirectory: Website

on:
  release:
    types: [published, created, edited, unpublished, deleted, released]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  
  build-listing:
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            !~/.nuget/packages/unwanted
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
            
      - name: Get package info
        id: package
        run: |
          VERSION=$(jq -r '.version' package.json)
          NAME=$(jq -r '.name' package.json)
          DISPLAY_NAME=$(jq -r '.displayName' package.json)
          DESCRIPTION=$(jq -r '.description' package.json)
          UNITY=$(jq -r '.unity' package.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "displayName=$DISPLAY_NAME" >> $GITHUB_OUTPUT
          echo "description=$DESCRIPTION" >> $GITHUB_OUTPUT
          echo "unity=$UNITY" >> $GITHUB_OUTPUT
          
      - name: Build Package Version Listing
        run: |
          mkdir -p Website
          echo "Creating index.json with the following info:"
          echo "Repository: ${{ github.repository }}"
          echo "Repository Owner: ${{ github.repository_owner }}"
          echo "Version: ${{ steps.package.outputs.version }}"
          echo "Name: ${{ steps.package.outputs.name }}"
          
          cat > Website/index.json << EOF
          {
            "name": "NolaTools VPM Repository",
            "id": "com.nolatools.packages", 
            "url": "https://${{ github.repository_owner }}.github.io/FurMaskGenerator/index.json",
            "packages": {
              "${{ steps.package.outputs.name }}": {
                "versions": {
                  "${{ steps.package.outputs.version }}": {
                    "name": "${{ steps.package.outputs.name }}",
                    "displayName": "${{ steps.package.outputs.displayName }}",
                    "version": "${{ steps.package.outputs.version }}",
                    "description": "${{ steps.package.outputs.description }}",
                    "unity": "${{ steps.package.outputs.unity }}",
                    "author": {
                      "name": "NolaTools",
                      "url": "https://github.com/NolaTools"
                    },
                    "url": "https://github.com/${{ github.repository }}/releases/download/${{ steps.package.outputs.version }}/${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}.zip"
                  }
                }
              }
            }
          }
          EOF
          
          echo "Generated index.json:"
          cat Website/index.json
          
          echo "Website directory contents:"
          ls -la Website/
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.listPublicDirectory }}
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-listing
    steps:
    
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4